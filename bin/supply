#!/usr/bin/env bash
# usage: bin/supply <build-dir> <cache-dir> <env-dir>

BUILD_DIR=${1:-}
# CACHE_DIR=${2:-}
# ENV_DIR=${3:-}

CONFIG_FILE=RustToolchain
ENTER_PHASE='----->'
PHASE_STEP='......'
EXIT_PHASE='<-----'

printf "%s Start supply\n" $ENTER_PHASE

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# Install/Update Rust toolchain
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
VERSION=stable

# Pickup channel version from toolchain configuration file if present
if [ -f "$BUILD_DIR/$CONFIG_FILE" ]
then
  if [ -s "$BUILD_DIR/$CONFIG_FILE" ]
  then
    VERSION="$(cat "$BUILD_DIR/$CONFIG_FILE")"
  else
    printf "%s Ignoring empty toolchain configuration file %s\n" "$PHASE_STEP" $CONFIG_FILE
  fi
fi

printf "%s Using Rust %s channel\n" "$PHASE_STEP" "$VERSION"

if command -v rustup &> /dev/null
then
  # It's possible that $VERSION has changed or been updated since Rust was installed in this container
  printf "%s Checking for possible updates to RUST %s channel\n" "$PHASE_STEP" "$VERSION"
  rustup self update
  rustup update "$VERSION"
  rustup default "$VERSION"
else
  printf "%s Downloading rustup\n" "$PHASE_STEP"
  curl https://sh.rustup.rs -sSf > rustup.sh
  chmod u+x rustup.sh

  printf "%s Installing RUST %s channel\n" "$PHASE_STEP" "$VERSION"
  ./rustup.sh -y --default-toolchain "$VERSION"
  rm rustup.sh
fi

printf "%s End supply\n" $EXIT_PHASE
